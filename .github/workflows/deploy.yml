name: Deploy Go Lambda Function

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  generate-lambda-zip:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-go@v4
        with:
          stable: 'true'
          go-version: '1.21'
      - run: go version

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Generate Lambda ZIP
        run: |
          # Build your Go Lambda code
          GOOS=linux go build -mod=mod -o main
          zip -j lambda.zip main
          echo "Lambda ZIP generated successfully"
        working-directory: ${{ github.workspace }}

      - name: Upload Lambda ZIP Artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda-artifact
          path: lambda.zip



  deploy:
    runs-on: ubuntu-latest

    needs: generate-lambda-zip

    outputs:
      lambda_bucket_name: ${{ steps.read-output.outputs.lambda_bucket_name }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: configureawscredentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::726032046446:role/github-actions-role
          role-session-name: samplerolesession
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.x

      - name: Download Lambda ZIP Artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-artifact

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        run: |
          cd ./terraform
          terraform init
          terraform apply -auto-approve

      - name: Deploy Lambda Code
        run: |
          aws lambda update-function-code --function-name "resum-api-lambda-resum-api-master" --zip-file "fileb://lambda.zip"
        if: failure()